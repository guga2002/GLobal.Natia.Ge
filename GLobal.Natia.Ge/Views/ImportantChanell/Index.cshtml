@using Common.Persistance.Services
@model List<MulticastAnalysisResult>

@{
    ViewData["Title"] = "Multicast Stream Analysis Summary";
    Layout = null;
    if(Model.Count>0)
    {
        foreach (var item in Model)
        {
            <h5 class="m-0">@item.bitratekbps</h5>
        }
    }
}

<!DOCTYPE html>
<html lang="ka">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>@ViewData["Title"]</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <style>
        html, body {
            height: 100%;
            margin: 0;
            padding: 0;
            background-color: #f8f9fa;
            font-size: 0.85rem;
        }

        .header {
            background-color: #343a40;
            color: white;
            padding: 0.75rem 1rem;
        }

        .group-container {
            padding: 1rem;
        }

        .grid-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
            gap: 1rem;
        }

        .program-card {
            border-left: 5px solid #dc3545;
            background-color: #fff3f3;
            height: 100%;
            overflow: hidden;
            box-shadow: 0 0 5px rgba(0, 0, 0, 0.1);
        }

        .stream-table th, .stream-table td {
            padding: 0.3rem;
            vertical-align: middle;
        }

        .missing-streams li {
            color: #dc3545;
            font-weight: 500;
        }

        table {
            font-size: 0.8rem;
        }

        .ip-group {
            margin-bottom: 2rem;
        }
    </style>
</head>
<body>
    <div class="header">
        <h5 class="m-0">📡 Multicast Stream Analysis Summary</h5>
    </div>

       <form method="get" asp-action="Index" asp-controller="Unite">
        <button type="submit" class="btn btn-primary button" style="width:100%;"> 
    <div class="group-container">
        @if (Model != null && Model.Any())
        {
            var ipGroups = Model
            .Where(m => !string.IsNullOrWhiteSpace(m.ip) && m.programs?.Any(p => p.isproblematic) == true)
            .GroupBy(m => m.ip)
            .OrderBy(g => g.Key);

            foreach (var ipGroup in ipGroups)
            {
                <div class="ip-group">
                    <h5 class="text-dark">🌐 IP: @ipGroup.Key</h5>
                            <div class="grid-container">
                        @foreach (var result in ipGroup)
                        {
                            foreach (var program in result.programs?.Where(p => p.isproblematic) ?? Enumerable.Empty<ProgramAnalysisResult>())
                            {
                                        <div class="card program-card">
                                    <div class="card-header py-1 px-2 bg-danger text-white">
                                        🎥 პროგრამა @program.programid
                                    </div>
                                    <div class="card-body py-2 px-3">
                                        <div class="mb-1">
                                            <strong>⏱:</strong> @result.durationseconds წმ <br />
                                            <strong>📦:</strong> @result.totalpackets <br />
                                            <strong>📶:</strong> @result.bitratekbps.ToString("F2") kbps
                                        </div>

                                        @if (!program.hasvideo)
                                        {
                                            <div class="text-warning">❌ ვიდეო ნაკადი არ არის.</div>
                                        }

                                        @if (program.missingstreams != null && program.missingstreams.Any())
                                        {
                                            <div class="mb-2">
                                                <span class="text-danger">❌ აკლია ნაკადები:</span>
                                                <ul class="missing-streams mb-1">
                                                    @foreach (var missing in program.missingstreams)
                                                    {
                                                        <li>@missing.type (PID: @missing.pid)</li>
                                                    }
                                                </ul>
                                            </div>
                                        }

                                        <table class="table table-sm table-bordered stream-table">
                                            <thead class="table-light">
                                                <tr>
                                                    <th>ტიპი</th>
                                                    <th>PID</th>
                                                    <th>პაკეტები</th>
                                                    <th>შეცდომები</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var stream in program.streams ?? Enumerable.Empty<StreamInfo>())
                                                {
                                                    <tr class="@(stream.continuityerrors > 10 ? "table-danger" : "")">
                                                        <td>@stream.type</td>
                                                        <td>@stream.pid</td>
                                                        <td>@stream.packetcount</td>
                                                        <td>
                                                            @stream.continuityerrors
                                                            @if (stream.errordetails != null && stream.errordetails.Any())
                                                            {
                                                                <ul class="mb-0 ps-3">
                                                                    @foreach (var detail in stream.errordetails)
                                                                    {
                                                                        <li>@detail</li>
                                                                    }
                                                                </ul>
                                                            }
                                                        </td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            }
                        }
                    </div>
                </div>
            }
        }
    </div>
     </button> 
     </form>
</body>
</html>
